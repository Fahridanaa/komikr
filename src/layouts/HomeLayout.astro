---
import CarouselPage from "@/components/CarouselPage";
import Layout from "./Layout.astro";
import PopularAside from "@/components/PopularAside";
import ComicCard from "@/components/ComicCard.astro";
import SliderSection from "@/components/SliderSection.astro";
import { getCollection } from "astro:content";
import type { Comic } from "@/models/comic";

const rawComics = await getCollection("comics");
const comics: Comic[] = rawComics.map(
	(comic: { data: Comic }) => comic.data as Comic
);

const generateMockComic = (): Comic => ({
	title: "Test Comic",
	author: "Author Name",
	type: "manga",
	chapter: 1,
	release: new Date("2023-01-01"),
	updatedOn: new Date("2024-01-01"),
	status: "ongoing",
	genres: [
		"Action",
		"Adventure",
		"Fantasy",
		"Comedy",
		"Romance",
		"Drama",
		"Slice of Life",
		"Supernatural",
		"Horror",
		"Mystery",
		"Psychological",
		"Sci-fi",
		"Seinen",
	],
	synopsis: "This is a test comic.",
});

const comicMockData: Comic[] = Array.from({ length: 10 }, generateMockComic);
---

<Layout title="Komikr - Tempat Baca Komik">
	<div class="hero-section">
		<CarouselPage client:load comics={comics} />
		<SliderSection title="Popular Comic Update">
			{
				comics.map((comic: Comic) => {
					return <ComicCard comic={comic} className="max-w-40" />;
				})
			}
		</SliderSection>
	</div>
	<div class="relative flex gap-4 justify-center">
		<div class="relative flex-[2] overflow-x-hidden">
			<slot />
		</div>
		<PopularAside client:idle comics={comicMockData} />
	</div>
</Layout>
